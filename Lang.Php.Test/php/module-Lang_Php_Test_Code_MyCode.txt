/*
Generated with CS2PHP
*/
class MyCodePhp {
    public static function BasicMath1() {
        $a = 1;
        $b = 2;
        $d = ($a + $b) / M_PI;
    }
    public static function PregTest() {
        $a = preg_match('/hello/i', 'a Hello x', $matches, 2);
        $b = preg_match('/hello/i', 'a Hello x');
        $c = preg_match('/hello/i', 'รณ Hello world', $matchWithOffsets, PREG_OFFSET_CAPTURE);
        echo 'We have ' . $matchWithOffsets[0][0] . ' at ' . $matchWithOffsets[0][1];
    }
    public static function CostantsAndVariables() {
        $a = null;
        $b = 18;
        $c = 1.2;
        $pi = M_PI;
        $h = 'Some text backslash\\ quote" single\' dollar$';
        $jacob = '\\anything';
        $x = 'test {h}';
    }
    public static function Filters() {
        global $_GET, $_POST;
        $a = filter_var($_GET['ipAddress'], FILTER_VALIDATE_IP);
        $b = filter_var($_GET['ipAddress'], FILTER_VALIDATE_IP, FILTER_FLAG_IPV4 | FILTER_FLAG_IPV6);
        $defaultValue = array('default' => '1.2.3.4');
        $c1 = filter_var($_GET['ipAddress'], FILTER_VALIDATE_IP, array('options' => $defaultValue, 'flags' => FILTER_FLAG_IPV4 | FILTER_FLAG_IPV6));
        $c = filter_var($_GET['ipAddress'], FILTER_VALIDATE_IP, array('options' => array('default' => '1.2.3.4'), 'flags' => FILTER_FLAG_IPV4 | FILTER_FLAG_IPV6));
        $d = filter_var($_POST['aaa'], FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE);
        $e = filter_var($_POST['aaa'], FILTER_VALIDATE_BOOLEAN, array('default' => false));
        $clientIp = filter_input(INPUT_SERVER, 'HTTP_CLIENT_IP', FILTER_VALIDATE_IP);
        $other = filter_input(INPUT_GET, 'Somename', FILTER_VALIDATE_IP, FILTER_FLAG_IPV4);
    }
    public static function Collections() {
        $list = array();
        foreach($list as $i)
            echo $i;
        $count = count($list);
        $dict = array();
        foreach($dict as $i__Key => $i__Value)
            echo $i__Key . ' ' . $i__Value;
        foreach(array_values($dict) as $i)
            echo $i;
        foreach(array_keys($dict) as $i)
            echo $i;
        $count = count($dict);
        $stack = array();
        array_push($stack, 'X');
        array_push($stack, 'Y');
        $s1 = $stack[count($stack) - 1];
        $s2 = array_pop($stack);
        $count = count($stack);
    }
    public static function StringConcats() {
        $x = 3;
        $a = 'ab';
        $b = 'a' . ($x / 2 < 10 ? 'b' : 'c');
        $c = 'a' . ($x / 2 < 10 ? 'b' : 'c') . 'd';
    }
    public static function SimpleEquations() {
    }
}